/*
 * üèõÔ∏è TDW - ACiencia REST api
 * [UPM] TDW REST api ACiencia
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: miw.etsisi@upm.es
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.InlineResponse2001;
import org.openapitools.client.model.Message;
import org.openapitools.client.model.UNKNOWN_BASE_TYPE;
import org.openapitools.client.model.User;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UsersApi
 */
@Ignore
public class UsersApiTest {

    private final UsersApi api = new UsersApi();

    
    /**
     * Retrieves the collection of User resources.
     *
     * Returns all users from the system that the user has access to.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apiUsersCgetTest() throws ApiException {
        InlineResponse2001 response = api.apiUsersCget();

        // TODO: test validations
    }
    
    /**
     * Provides the list of HTTP supported methods.
     *
     * Return a &#x60;Allow&#x60; header with a comma separated list of HTTP supported methods.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apiUsersCoptionsTest() throws ApiException {
        api.apiUsersCoptions();

        // TODO: test validations
    }
    
    /**
     * Removes the User resource.
     *
     * Deletes the user identified by &#x60;userId&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apiUsersDeleteTest() throws ApiException {
        Integer userId = null;
        api.apiUsersDelete(userId);

        // TODO: test validations
    }
    
    /**
     * Retrieves a User resource based on a single ID.
     *
     * Returns the user identified by &#x60;userId&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apiUsersGetTest() throws ApiException {
        Integer userId = null;
        User response = api.apiUsersGet(userId);

        // TODO: test validations
    }
    
    /**
     * Provides the list of HTTP supported methods.
     *
     * Return a &#x60;Allow&#x60; header with a comma separated list of HTTP supported methods.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apiUsersOptionsIdTest() throws ApiException {
        Integer userId = null;
        api.apiUsersOptionsId(userId);

        // TODO: test validations
    }
    
    /**
     * Creates a User resource.
     *
     * Creates a new user
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apiUsersPostTest() throws ApiException {
        UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
        User response = api.apiUsersPost(UNKNOWN_BASE_TYPE);

        // TODO: test validations
    }
    
    /**
     * Updates the User resource.
     *
     * Updates the user identified by &#x60;userId&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apiUsersPutTest() throws ApiException {
        Integer userId = null;
        String ifMatch = null;
        UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
        User response = api.apiUsersPut(userId, ifMatch, UNKNOWN_BASE_TYPE);

        // TODO: test validations
    }
    
    /**
     * Determines if username exists
     *
     * Returns status code 204 if &#x60;username&#x60; exists.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void tdwGetUserNameTest() throws ApiException {
        String username = null;
        api.tdwGetUserName(username);

        // TODO: test validations
    }
    
}
